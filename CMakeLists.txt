cmake_minimum_required(VERSION 3.13)
project(x11_crosshair VERSION 1.0 LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Find X11
find_package(X11 REQUIRED)

# Use pkg-config to find Xfixes
find_package(PkgConfig REQUIRED)
pkg_check_modules(XFIXES REQUIRED xfixes)

# Create executable from main.cpp
add_executable(x11_crosshair main.cpp)



# Include directories from found packages
target_include_directories(x11_crosshair PRIVATE
        ${X11_INCLUDE_DIR}
        ${XFIXES_INCLUDE_DIRS}
)


# Link required libraries
target_link_libraries(x11_crosshair PRIVATE
        ${X11_LIBRARIES}
        ${XFIXES_LIBRARIES}
)

add_executable(x11_crosshair2 main2.cpp)
target_include_directories(x11_crosshair2 PRIVATE
        ${X11_INCLUDE_DIR}
        ${XFIXES_INCLUDE_DIRS}
)
target_link_libraries(x11_crosshair2 PRIVATE
        ${X11_LIBRARIES}
        ${XFIXES_LIBRARIES}
)


# Add some useful compiler flags
target_compile_options(x11_crosshair PRIVATE -Wall -Wextra -Wpedantic)

# Aggressive GCC-only optimizations for Release builds
if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    target_compile_options(x11_crosshair PRIVATE
            $<$<AND:$<CONFIG:Release>,$<CXX_COMPILER_ID:GNU>>:-O3>
            $<$<AND:$<CONFIG:Release>,$<CXX_COMPILER_ID:GNU>>:-march=native>
            $<$<AND:$<CONFIG:Release>,$<CXX_COMPILER_ID:GNU>>:-funroll-loops>
            $<$<AND:$<CONFIG:Release>,$<CXX_COMPILER_ID:GNU>>:-ffast-math>
            $<$<AND:$<CONFIG:Release>,$<CXX_COMPILER_ID:GNU>>:-fomit-frame-pointer>
            $<$<AND:$<CONFIG:Release>,$<CXX_COMPILER_ID:GNU>>:-fstrict-aliasing>
            $<$<AND:$<CONFIG:Release>,$<CXX_COMPILER_ID:GNU>>:-flto>
            $<$<AND:$<CONFIG:Release>,$<CXX_COMPILER_ID:GNU>>:-pipe>
    )

    target_link_options(x11_crosshair PRIVATE
            $<$<AND:$<CONFIG:Release>,$<CXX_COMPILER_ID:GNU>>:-flto>
            $<$<AND:$<CONFIG:Release>,$<CXX_COMPILER_ID:GNU>>:-Wl,-O1>
            $<$<AND:$<CONFIG:Release>,$<CXX_COMPILER_ID:GNU>>:-Wl,--as-needed>
    )
endif()

# If pkg-config reported library dirs, ensure the linker can find them
if(XFIXES_LIBRARY_DIRS)
    link_directories(${XFIXES_LIBRARY_DIRS})
endif()
